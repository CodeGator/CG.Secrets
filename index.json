{
  "api/CG.Secrets.Models.html": {
    "href": "api/CG.Secrets.Models.html",
    "title": "Namespace CG.Secrets.Models",
    "keywords": "Namespace CG.Secrets.Models Classes Secret This class represents a secret value."
  },
  "api/CG.Secrets.Models.Secret.html": {
    "href": "api/CG.Secrets.Models.Secret.html",
    "title": "Class Secret",
    "keywords": "Class Secret This class represents a secret value. Inheritance System.Object CG.DataAnnotations.ValidatableObject CG.Business.Models.ModelBase CG.Business.Models.ModelBase < System.String > Secret Implements System.ComponentModel.DataAnnotations.IValidatableObject CG.Business.Models.IModel < System.String > CG.Business.Models.IModel Inherited Members CG.Business.Models.ModelBase<System.String>.GetHashCode() CG.Business.Models.ModelBase<System.String>.Equals(System.Object) CG.Business.Models.ModelBase<System.String>.ToString() CG.Business.Models.ModelBase<System.String>.Key CG.DataAnnotations.ValidatableObject.Validate(System.ComponentModel.DataAnnotations.ValidationContext) System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : CG.Secrets.Models Assembly : CG.Secrets.dll Syntax public class Secret : ModelBase<string>, IValidatableObject, IModel<string>, IModel Properties Name This property contains the name of the secret. Declaration [Required] public string Name { get; set; } Property Value Type Description System.String Value This property contains the value of the secret. Declaration public string Value { get; set; } Property Value Type Description System.String Implements System.ComponentModel.DataAnnotations.IValidatableObject CG.Business.Models.IModel<TKey> CG.Business.Models.IModel"
  },
  "api/CG.Secrets.Repositories.html": {
    "href": "api/CG.Secrets.Repositories.html",
    "title": "Namespace CG.Secrets.Repositories",
    "keywords": "Namespace CG.Secrets.Repositories Interfaces ISecretRepository This interface represents a repository for storing and retrieving Secret objects."
  },
  "api/CG.Secrets.Repositories.ISecretRepository.html": {
    "href": "api/CG.Secrets.Repositories.ISecretRepository.html",
    "title": "Interface ISecretRepository",
    "keywords": "Interface ISecretRepository This interface represents a repository for storing and retrieving Secret objects. Inherited Members System.IDisposable.Dispose() Namespace : CG.Secrets.Repositories Assembly : CG.Secrets.dll Syntax public interface ISecretRepository : IRepository, IDisposable Methods GetByNameAsync(String, CancellationToken) This method retrieves the value of a secret, by name. Declaration Task<Secret> GetByNameAsync(string name, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.String name The name to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task < Secret > A task to perform the operation, that returns a Secret object, if a match is found, or NULL otherwise. SetByNameAsync(String, String, CancellationToken) This method sets the value of a secret, by name Declaration Task<Secret> SetByNameAsync(string name, string value, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.String name The name to use for the operation. System.String value The value to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task < Secret > A task to perform the operation, that returns a Secret object, if a match is found, or NULL otherwise."
  },
  "api/CG.Secrets.Stores.html": {
    "href": "api/CG.Secrets.Stores.html",
    "title": "Namespace CG.Secrets.Stores",
    "keywords": "Namespace CG.Secrets.Stores Classes SecretStore This class is a default implementation of the ISecretStore interface. Interfaces ISecretStore This interface represents a store for managing secrets."
  },
  "api/CG.Secrets.Stores.ISecretStore.html": {
    "href": "api/CG.Secrets.Stores.ISecretStore.html",
    "title": "Interface ISecretStore",
    "keywords": "Interface ISecretStore This interface represents a store for managing secrets. Inherited Members System.IDisposable.Dispose() Namespace : CG.Secrets.Stores Assembly : CG.Secrets.dll Syntax public interface ISecretStore : IStore, IDisposable Methods GetByNameAsync(String, CancellationToken) This method retrieves the value of a secret, by name. Declaration Task<Secret> GetByNameAsync(string name, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.String name The name to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task < Secret > A task to perform the operation, that returns a Secret object, if a match is found, or NULL otherwise. SetByNameAsync(String, String, CancellationToken) This method sets the value of a secret, by name Declaration Task<Secret> SetByNameAsync(string name, string value, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.String name The name to use for the operation. System.String value The value to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task < Secret > A task to perform the operation, that returns a Secret object, if a match is found, or NULL otherwise."
  },
  "api/CG.Secrets.Stores.SecretStore.html": {
    "href": "api/CG.Secrets.Stores.SecretStore.html",
    "title": "Class SecretStore",
    "keywords": "Class SecretStore This class is a default implementation of the ISecretStore interface. Inheritance System.Object CG.DisposableBase CG.Business.Stores.StoreBase SecretStore Implements ISecretStore CG.Business.Stores.IStore System.IDisposable Inherited Members CG.DisposableBase.System.IDisposable.Dispose() CG.DisposableBase.Dispose(System.Boolean) CG.DisposableBase.IsDisposed System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Secrets.Stores Assembly : CG.Secrets.dll Syntax public class SecretStore : StoreBase, ISecretStore, IStore, IDisposable Constructors SecretStore(ILogger<SecretStore>, ISecretRepository) This constructor creates a new instance of the SecretStore class. Declaration public SecretStore(ILogger<SecretStore> logger, ISecretRepository secretRepository) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger < SecretStore > logger The logger to use with the store. ISecretRepository secretRepository The repository to use with the store. Properties Logger This property contains a logger instance. Declaration protected ILogger<SecretStore> Logger { get; } Property Value Type Description Microsoft.Extensions.Logging.ILogger < SecretStore > SecretRepository This property contains a reference to a secret repository. Declaration protected ISecretRepository SecretRepository { get; set; } Property Value Type Description ISecretRepository Methods GetByNameAsync(String, CancellationToken) This method retrieves the value of a secret, by name. Declaration public virtual async Task<Secret> GetByNameAsync(string name, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.String name The name to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task < Secret > A task to perform the operation, that returns a Secret object, if a match is found, or NULL otherwise. SetByNameAsync(String, String, CancellationToken) This method sets the value of a secret, by name Declaration public virtual async Task<Secret> SetByNameAsync(string name, string value, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.String name The name to use for the operation. System.String value The value to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task < Secret > A task to perform the operation, that returns a Secret object, if a match is found, or NULL otherwise. Implements ISecretStore CG.Business.Stores.IStore System.IDisposable"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "PLACEHOLDER",
    "keywords": "PLACEHOLDER TODO: Add .NET projects to the src folder and run docfx to generate REAL API Documentation !"
  },
  "api/Microsoft.Extensions.DependencyInjection.html": {
    "href": "api/Microsoft.Extensions.DependencyInjection.html",
    "title": "Namespace Microsoft.Extensions.DependencyInjection",
    "keywords": "Namespace Microsoft.Extensions.DependencyInjection Classes SecretsServiceCollectionExtensions This class contains extension methods related to the Microsoft.Extensions.DependencyInjection.IServiceCollection type, for registering types from the CG.Secrets library."
  },
  "api/Microsoft.Extensions.DependencyInjection.SecretsServiceCollectionExtensions.html": {
    "href": "api/Microsoft.Extensions.DependencyInjection.SecretsServiceCollectionExtensions.html",
    "title": "Class SecretsServiceCollectionExtensions",
    "keywords": "Class SecretsServiceCollectionExtensions This class contains extension methods related to the Microsoft.Extensions.DependencyInjection.IServiceCollection type, for registering types from the CG.Secrets library. Inheritance System.Object SecretsServiceCollectionExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.Extensions.DependencyInjection Assembly : CG.Secrets.dll Syntax public static class SecretsServiceCollectionExtensions Methods AddSecretStores(IServiceCollection, IConfiguration, ServiceLifetime) This method adds logic to support the stores in the CG.Secrets library. Declaration public static IServiceCollection AddSecretStores(this IServiceCollection serviceCollection, IConfiguration configuration, ServiceLifetime serviceLifetime = ServiceLifetime.Scoped) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection The service collection to use for the operation. Microsoft.Extensions.Configuration.IConfiguration configuration The configuration to use for the operation. Microsoft.Extensions.DependencyInjection.ServiceLifetime serviceLifetime The service lifetime to use for the operation. Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceCollection The value of the serviceCollection parameter, for chaining calls together."
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Add your introductions here!",
    "keywords": "Add your introductions here!"
  },
  "index.html": {
    "href": "index.html",
    "title": "Introduction",
    "keywords": "Introduction CG.Secrets.dll contains parameter validation used by other CodeGator projects."
  }
}